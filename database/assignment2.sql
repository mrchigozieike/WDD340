-- Create the account_type enum type
CREATE TYPE public.account_type AS ENUM
    ('Client', 'Employee', 'Admin');

-- Create the account table
CREATE TABLE IF NOT EXISTS public.account
(
    account_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    account_firstname character varying COLLATE pg_catalog."default" NOT NULL,
    account_lastname character varying COLLATE pg_catalog."default" NOT NULL,
    account_email character varying COLLATE pg_catalog."default" NOT NULL,
    account_password character varying COLLATE pg_catalog."default" NOT NULL,
    account_type account_type NOT NULL DEFAULT 'Client'::account_type,
    CONSTRAINT account_pkey PRIMARY KEY (account_id)
)
TABLESPACE pg_default;

-- Create the classification table
CREATE TABLE IF NOT EXISTS public.classification
(
    classification_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    classification_name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT classification_pk PRIMARY KEY (classification_id)
);

-- Create the inventry table
CREATE TABLE IF NOT EXISTS public.inventry(
    inv_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    inv_make character varying NOT NULL,
    inv_model character varying NOT NULL,
    inv_year character (4) NOT NULL,
    inv_description text NOT NULL,
    inv_image character varying NOT NULL,
    inv_thumbnail character varying NOT NULL,
    inv_price numeric(9, 0) NOT NULL,
    inv_miles integer NOT NULL,
    inv_color character varying NOT NULL,
    classification_id integer NOT NULL,
    CONSTRAINT inventry_pkey PRIMARY KEY (inv_id)
);

-- Add foreign key constraint to inventry table
ALTER TABLE IF EXISTS public.inventry
    ADD CONSTRAINT fk_classification FOREIGN KEY (classification_id)
    REFERENCES public.classification (classification_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE NO ACTION;

-- Insert, update, and delete a record in the account table
INSERT INTO public.account (account_firstname, account_lastname, account_email, account_password)
VALUES ('Tony', 'Stark', 'tony@starkent.com', 'Iam1ronM@n');

UPDATE public.account
SET account_type = 'Admin'
WHERE account_email = 'tony@starkent.com';

DELETE FROM public.account
WHERE account_email = 'tony@starkent.com';

-- Insert a new classification and get the new classification_id
INSERT INTO public.classification (classification_name)
VALUES ('Sport')
RETURNING classification_id;

-- Insert a record for GM Hummer with the valid classification_id
INSERT INTO public.inventry (
    inv_make, inv_model, inv_year, inv_description, inv_image, 
    inv_thumbnail, inv_price, inv_miles, inv_color, classification_id
)
VALUES (
    'GM', 'Hummer', '2024', 'small interiors', '/images/gm_hummer.jpg', 
    '/images/gm_hummer_thumbnail.jpg', 60000, 5000, 'Black', (
        SELECT classification_id FROM public.classification WHERE classification_name = 'Sport'
    )
);
